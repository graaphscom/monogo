name: A reusable workflow for linting and testing a Golang module.
on:
  workflow_call:
    inputs:
      go_module_name:
        required: true
        type: string
      postgres_password:
        type: string
      postgres_user:
        type: string
      postgres_url_env_var_name:
        type: string
jobs:
  golangci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - uses: actions/checkout@v3
      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          working-directory: ${{ inputs.go_module_name }}
  codecov:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Start postgres and set env variable with its url
        if: ${{ inputs.postgres_password && inputs.postgres_user && inputs.postgres_url_env_var_name }}
        run: |
          docker run --rm -e POSTGRES_PASSWORD=${{inputs.postgres_password}} -e POSTGRES_USER=${{inputs.postgres_user}} -d -p 5432:5432 postgres:15.1
          echo "${{inputs.postgres_url_env_var_name }}=postgres://${{inputs.postgres_user}}:${{inputs.postgres_password}}@localhost:5432/${{inputs.postgres_user}}?sslmode=disable" >> $GITHUB_ENV
      - name: Test with coverage
        run: go test ./${{ inputs.go_module_name }} -race -coverprofile=${{ inputs.go_module_name }}.txt -covermode=atomic
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./${{ inputs.go_module_name }}.txt
          flags: ${{ inputs.go_module_name }}
          fail_ci_if_error: true